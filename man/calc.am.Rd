% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc.am.R
\name{calc.am}
\alias{calc.am}
\title{calc.am}
\usage{
calc.am(wave, msmooth = c(1000, 90))
}
\arguments{
\item{wave}{wave object, e.g., from `load.wave` or `readWave`.}

\item{msmooth}{used as argument for the `seewave::env` function. *A vector of length 2 to smooth the
amplitude envelope with a mean sliding window. The first component is the window length (in number of
points). The second component is the overlap between successive windows (in \%).* Default is `c(500, 95)`.}
}
\value{
Returns a data frame with nr_notes = total number of amplitude modulations in the signal,
amp_mod_med = median difference between highest and lowest amplitude from the normalised envelope,
internote_med = median internote distance in seconds.
}
\description{
Calculates the amplitude modulation for a wave object and returns several measurements in
a dataframe.
}
\examples{
require(callsync)
require(seewave)
require(tuneR)
path_git = 'https://raw.githubusercontent.com'
path_repo = '/simeonqs/callsync/master/tests/testthat/files'
file_1 = '/wave_1.wav'
url_1 = paste0(path_git, path_repo, file_1)
local_file_1 = paste(tempdir(), file_1, sep = '/')
if(!file.exists(local_file_1))
  download.file(url_1, destfile = local_file_1, mode = 'wb',)
wave = readWave(local_file_1)
result = calc.am(wave)

}
